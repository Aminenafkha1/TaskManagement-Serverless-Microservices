@using TaskManagement.Client.Services
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inherits LayoutComponentBase

<div class="page">
    @if (isAuthenticated)
    {
        <div class="app-layout">
            <!-- Sidebar -->
            <div class="sidebar">
                <div class="sidebar-header">
                    <div class="brand">
                        <i class="fas fa-tasks"></i>
                        <span>TaskManager</span>
                    </div>
                </div>
                
                <nav class="sidebar-nav">
                    <a href="/dashboard" class="nav-item @(IsActive("/dashboard"))">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                    <a href="/tasks" class="nav-item @(IsActive("/tasks"))">
                        <i class="fas fa-list-ul"></i>
                        <span>All Tasks</span>
                    </a>
                    <a href="/tasks/create" class="nav-item @(IsActive("/tasks/create"))">
                        <i class="fas fa-plus"></i>
                        <span>Create Task</span>
                    </a>
                    <a href="/calendar" class="nav-item @(IsActive("/calendar"))">
                        <i class="fas fa-calendar"></i>
                        <span>Calendar</span>
                    </a>
                    <a href="/reports" class="nav-item @(IsActive("/reports"))">
                        <i class="fas fa-chart-bar"></i>
                        <span>Reports</span>
                    </a>
                </nav>
                
                <div class="sidebar-footer">
                    <div class="user-info">
                        <div class="user-avatar">
                            <i class="fas fa-user"></i>
                        </div>
                        <div class="user-details">
                            <div class="user-name">@currentUser?.FullName</div>
                            <div class="user-email">@currentUser?.Email</div>
                        </div>
                    </div>
                    <button class="logout-btn" @onclick="HandleLogout" title="Logout">
                        <i class="fas fa-sign-out-alt"></i>
                    </button>
                </div>
            </div>

            <!-- Main Content -->
            <div class="main-content">
                @Body
            </div>
        </div>
    }
    else
    {
    <div class="auth-main">
            @Body
        </div>
    }
</div>

@code {
    private bool isAuthenticated = false;
    private UserInfo? currentUser;

    protected override async Task OnInitializedAsync()
    {
        await CheckAuthenticationStatus();
    }

    private async Task CheckAuthenticationStatus()
    {
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            currentUser = await AuthService.GetCurrentUserAsync();
        }
        else
        {
            // Redirect to login if not authenticated and not already on auth pages
            var currentUri = Navigation.Uri;
            if (!currentUri.Contains("/login") && !currentUri.Contains("/register"))
            {
                Navigation.NavigateTo("/login");
            }
        }
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        isAuthenticated = false;
        currentUser = null;
        Navigation.NavigateTo("/login");
    }

    private string IsActive(string path)
    {
        return Navigation.Uri.Contains(path) ? "active" : "";
    }
}
