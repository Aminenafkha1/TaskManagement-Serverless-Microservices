@page "/login"
@using MudBlazor
@using TaskManagement.Client.Services
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<PageTitle>Login - Task Management</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center justify-center" Style="min-height: 100vh;">
    <MudPaper Class="pa-8" Width="100%" MaxWidth="400px" Elevation="8">
        <div class="d-flex flex-column align-center mb-6">
            <MudIcon Icon="Icons.Material.Filled.Task" Size="Size.Large" Color="Color.Primary" Class="mb-2" />
            <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom="true">TaskManager</MudText>
            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">Sign in to manage your tasks</MudText>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <MudAlert Severity="Severity.Error" Class="mb-4">
                @errorMessage
            </MudAlert>
        }

        <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />
            
            <MudTextField @bind-Value="loginModel.Email" 
                         Label="Email" 
                         Variant="Variant.Outlined" 
                         InputType="InputType.Email"
                         Adornment="Adornment.Start" 
                         AdornmentIcon="Icons.Material.Filled.Email"
                         Required="true" 
                         RequiredError="Email is required!"
                         Class="mb-4" />

            <MudTextField @bind-Value="loginModel.Password" 
                         Label="Password" 
                         Variant="Variant.Outlined" 
                         InputType="InputType.Password"
                         Adornment="Adornment.Start" 
                         AdornmentIcon="Icons.Material.Filled.Lock"
                         Required="true" 
                         RequiredError="Password is required!"
                         Class="mb-6" />

            <MudButton ButtonType="ButtonType.Submit" 
                      Variant="Variant.Filled" 
                      Color="Color.Primary" 
                      Size="Size.Large"
                      FullWidth="true"
                      StartIcon="@(isLoading ? Icons.Material.Filled.HourglassEmpty : Icons.Material.Filled.Login)"
                      Disabled="@isLoading"
                      Class="mb-4">
                @if (isLoading)
                {
                    <span>Signing in...</span>
                }
                else
                {
                    <span>Sign In</span>
                }
            </MudButton>
        </EditForm>

        <div class="d-flex justify-center">
            <MudText Typo="Typo.body2">
                Don't have an account? 
                <MudLink Href="/register" Color="Color.Primary">Sign up</MudLink>
            </MudText>
        </div>
    </MudPaper>
</MudContainer>

@code {
    private LoginModel loginModel = new();
    private bool isLoading = false;
    private string? errorMessage;

    public class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }

    private async Task HandleLogin()
    {
        try
        {
            isLoading = true;
            errorMessage = null;

            var request = new LoginRequest
            {
                Email = loginModel.Email,
                Password = loginModel.Password
            };

            var result = await AuthService.LoginAsync(request);
            
            if (result != null)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Invalid email or password";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Login failed: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}
