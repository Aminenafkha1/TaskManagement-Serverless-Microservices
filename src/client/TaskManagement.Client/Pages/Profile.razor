@page "/profile"
@using TaskManagement.Client.Services
@inject IAuthenticationService AuthService

<PageTitle>Profile - Task Management</PageTitle>

<!-- Page Header -->
<div class="d-flex justify-space-between align-center mb-6">
    <div>
        <MudText Typo="Typo.h4" Class="mb-2">
            <MudIcon Icon="Icons.Material.Filled.Person" Class="mr-3" />
            My Profile
        </MudText>
        <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
            Manage your personal information and account settings.
        </MudText>
    </div>
</div>

<MudGrid>
    <!-- Profile Information -->
    <MudItem xs="12" md="8">
        <MudCard Elevation="2" Class="pa-4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="Icons.Material.Filled.AccountCircle" Class="mr-2" />
                        Personal Information
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="firstName" 
                                    Label="First Name" 
                                    Variant="Variant.Outlined"
                                    Required="true" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="lastName" 
                                    Label="Last Name" 
                                    Variant="Variant.Outlined"
                                    Required="true" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="email" 
                                    Label="Email Address" 
                                    Variant="Variant.Outlined"
                                    InputType="InputType.Email"
                                    Required="true"
                                    ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="phone" 
                                    Label="Phone Number" 
                                    Variant="Variant.Outlined"
                                    InputType="InputType.Telephone" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField @bind-Value="jobTitle" 
                                    Label="Job Title" 
                                    Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="bio" 
                                    Label="Bio" 
                                    Variant="Variant.Outlined"
                                    Lines="3"
                                    Placeholder="Tell us a little about yourself..." />
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" 
                          Color="Color.Primary"
                          OnClick="SaveProfile">
                    Save Changes
                </MudButton>
                <MudButton Variant="Variant.Outlined" 
                          Color="Color.Secondary"
                          OnClick="ResetProfile">
                    Reset
                </MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>

    <!-- Profile Picture & Stats -->
    <MudItem xs="12" md="4">
        <MudCard Elevation="2" Class="pa-4 mb-4">
            <MudCardContent>
                <div class="d-flex flex-column align-center">
                    <MudAvatar Size="Size.Large" Class="mb-4">
                        <MudIcon Icon="Icons.Material.Filled.Person" Size="Size.Large" />
                    </MudAvatar>
                    <MudText Typo="Typo.h6" Class="mb-2">@($"{firstName} {lastName}")</MudText>
                    <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-4">@email</MudText>
                    
                    <MudButton Variant="Variant.Outlined" 
                              Color="Color.Primary"
                              StartIcon="Icons.Material.Filled.PhotoCamera"
                              OnClick="ChangeProfilePicture">
                        Change Photo
                    </MudButton>
                </div>
            </MudCardContent>
        </MudCard>

        <!-- Account Stats -->
        <MudCard Elevation="2" Class="pa-4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Account Statistics</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudStack Spacing="3">
                    <div class="d-flex justify-space-between">
                        <MudText Typo="Typo.body2">Member Since:</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Primary">@memberSince.ToString("MMM yyyy")</MudText>
                    </div>
                    <div class="d-flex justify-space-between">
                        <MudText Typo="Typo.body2">Total Tasks:</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Primary">@totalTasks</MudText>
                    </div>
                    <div class="d-flex justify-space-between">
                        <MudText Typo="Typo.body2">Completed Tasks:</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Success">@completedTasks</MudText>
                    </div>
                    <div class="d-flex justify-space-between">
                        <MudText Typo="Typo.body2">Success Rate:</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Success">@(totalTasks > 0 ? (completedTasks * 100 / totalTasks).ToString("F1") : "0")%</MudText>
                    </div>
                </MudStack>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Account Security -->
    <MudItem xs="12">
        <MudCard Elevation="2" Class="pa-4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="Icons.Material.Filled.Security" Class="mr-2" />
                        Account Security
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" md="4">
                        <MudCard Elevation="1" Class="pa-3">
                            <div class="d-flex align-center">
                                <MudIcon Icon="Icons.Material.Filled.Key" Color="Color.Primary" Class="mr-3" />
                                <div>
                                    <MudText Typo="Typo.subtitle2">Password</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Last changed 30 days ago</MudText>
                                </div>
                            </div>
                            <MudButton Variant="Variant.Text" 
                                      Color="Color.Primary" 
                                      Size="Size.Small"
                                      Class="mt-2"
                                      OnClick="ChangePassword">
                                Change Password
                            </MudButton>
                        </MudCard>
                    </MudItem>
                    
                    <MudItem xs="12" md="4">
                        <MudCard Elevation="1" Class="pa-3">
                            <div class="d-flex align-center">
                                <MudIcon Icon="Icons.Material.Filled.Shield" Color="Color.Warning" Class="mr-3" />
                                <div>
                                    <MudText Typo="Typo.subtitle2">Two-Factor Auth</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">Not enabled</MudText>
                                </div>
                            </div>
                            <MudButton Variant="Variant.Text" 
                                      Color="Color.Primary" 
                                      Size="Size.Small"
                                      Class="mt-2"
                                      OnClick="EnableTwoFactor">
                                Enable 2FA
                            </MudButton>
                        </MudCard>
                    </MudItem>
                    
                    <MudItem xs="12" md="4">
                        <MudCard Elevation="1" Class="pa-3">
                            <div class="d-flex align-center">
                                <MudIcon Icon="Icons.Material.Filled.Login" Color="Color.Success" Class="mr-3" />
                                <div>
                                    <MudText Typo="Typo.subtitle2">Last Login</MudText>
                                    <MudText Typo="Typo.body2" Color="Color.Secondary">@lastLogin.ToString("MMM dd, HH:mm")</MudText>
                                </div>
                            </div>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    private string firstName = "John";
    private string lastName = "Doe";
    private string email = "john.doe@example.com";
    private string phone = "";
    private string jobTitle = "";
    private string bio = "";
    
    private DateTime memberSince = DateTime.Now.AddMonths(-6);
    private DateTime lastLogin = DateTime.Now.AddHours(-2);
    private int totalTasks = 45;
    private int completedTasks = 38;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserProfile();
    }

    private async Task LoadUserProfile()
    {
        try
        {
            var currentUser = await AuthService.GetCurrentUserAsync();
            if (currentUser != null)
            {
                // Split full name into first and last name
                var nameParts = currentUser.FullName?.Split(' ', 2) ?? new[] { "", "" };
                firstName = nameParts.Length > 0 ? nameParts[0] : "";
                lastName = nameParts.Length > 1 ? nameParts[1] : "";
                email = currentUser.Email ?? "";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user profile: {ex.Message}");
        }
    }

    private async Task SaveProfile()
    {
        try
        {
            // TODO: Implement profile update API call
            await Task.Delay(500); // Simulate API call
            
            // Show success message
            await InvokeAsync(StateHasChanged);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving profile: {ex.Message}");
        }
    }

    private async Task ResetProfile()
    {
        await LoadUserProfile();
    }

    private async Task ChangeProfilePicture()
    {
        // TODO: Implement profile picture upload
        await Task.CompletedTask;
    }

    private async Task ChangePassword()
    {
        // TODO: Implement change password dialog
        await Task.CompletedTask;
    }

    private async Task EnableTwoFactor()
    {
        // TODO: Implement 2FA setup
        await Task.CompletedTask;
    }
}
